// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: packets.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerkCategory int32

const (
	PerkCategory_PERSONAL PerkCategory = 0
	PerkCategory_TEAM     PerkCategory = 1
	PerkCategory_GAME     PerkCategory = 2
)

// Enum value maps for PerkCategory.
var (
	PerkCategory_name = map[int32]string{
		0: "PERSONAL",
		1: "TEAM",
		2: "GAME",
	}
	PerkCategory_value = map[string]int32{
		"PERSONAL": 0,
		"TEAM":     1,
		"GAME":     2,
	}
)

func (x PerkCategory) Enum() *PerkCategory {
	p := new(PerkCategory)
	*p = x
	return p
}

func (x PerkCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerkCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[0].Descriptor()
}

func (PerkCategory) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[0]
}

func (x PerkCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerkCategory.Descriptor instead.
func (PerkCategory) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

type S2CPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Packet:
	//
	//	*S2CPacket_UpdatePerk
	//	*S2CPacket_Ping
	Packet isS2CPacket_Packet `protobuf_oneof:"packet"`
}

func (x *S2CPacket) Reset() {
	*x = S2CPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPacket) ProtoMessage() {}

func (x *S2CPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPacket.ProtoReflect.Descriptor instead.
func (*S2CPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

func (m *S2CPacket) GetPacket() isS2CPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (x *S2CPacket) GetUpdatePerk() *S2CPerkUpdatePacket {
	if x, ok := x.GetPacket().(*S2CPacket_UpdatePerk); ok {
		return x.UpdatePerk
	}
	return nil
}

func (x *S2CPacket) GetPing() *S2CPingPacket {
	if x, ok := x.GetPacket().(*S2CPacket_Ping); ok {
		return x.Ping
	}
	return nil
}

type isS2CPacket_Packet interface {
	isS2CPacket_Packet()
}

type S2CPacket_UpdatePerk struct {
	UpdatePerk *S2CPerkUpdatePacket `protobuf:"bytes,1,opt,name=updatePerk,proto3,oneof"`
}

type S2CPacket_Ping struct {
	Ping *S2CPingPacket `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*S2CPacket_UpdatePerk) isS2CPacket_Packet() {}

func (*S2CPacket_Ping) isS2CPacket_Packet() {}

type S2CPingPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CPingPacket) Reset() {
	*x = S2CPingPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPingPacket) ProtoMessage() {}

func (x *S2CPingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPingPacket.ProtoReflect.Descriptor instead.
func (*S2CPingPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{1}
}

type S2CPerkUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category PerkCategory `protobuf:"varint,1,opt,name=category,proto3,enum=art.ameliah.laby.addons.cubepanion.PerkCategory" json:"category,omitempty"`
	Perks    []string     `protobuf:"bytes,2,rep,name=perks,proto3" json:"perks,omitempty"`
	Uuid     string       `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *S2CPerkUpdatePacket) Reset() {
	*x = S2CPerkUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPerkUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPerkUpdatePacket) ProtoMessage() {}

func (x *S2CPerkUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPerkUpdatePacket.ProtoReflect.Descriptor instead.
func (*S2CPerkUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{2}
}

func (x *S2CPerkUpdatePacket) GetCategory() PerkCategory {
	if x != nil {
		return x.Category
	}
	return PerkCategory_PERSONAL
}

func (x *S2CPerkUpdatePacket) GetPerks() []string {
	if x != nil {
		return x.Perks
	}
	return nil
}

func (x *S2CPerkUpdatePacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type C2SPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Packet:
	//
	//	*C2SPacket_UpdateLocation
	//	*C2SPacket_UpdatePerk
	//	*C2SPacket_Disconnect
	//	*C2SPacket_Ping
	Packet isC2SPacket_Packet `protobuf_oneof:"packet"`
}

func (x *C2SPacket) Reset() {
	*x = C2SPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPacket) ProtoMessage() {}

func (x *C2SPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPacket.ProtoReflect.Descriptor instead.
func (*C2SPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{3}
}

func (m *C2SPacket) GetPacket() isC2SPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (x *C2SPacket) GetUpdateLocation() *C2SUpdateLocationPacket {
	if x, ok := x.GetPacket().(*C2SPacket_UpdateLocation); ok {
		return x.UpdateLocation
	}
	return nil
}

func (x *C2SPacket) GetUpdatePerk() *C2SPerkUpdatePacket {
	if x, ok := x.GetPacket().(*C2SPacket_UpdatePerk); ok {
		return x.UpdatePerk
	}
	return nil
}

func (x *C2SPacket) GetDisconnect() *C2SDisconnectPacket {
	if x, ok := x.GetPacket().(*C2SPacket_Disconnect); ok {
		return x.Disconnect
	}
	return nil
}

func (x *C2SPacket) GetPing() *C2SPingPacket {
	if x, ok := x.GetPacket().(*C2SPacket_Ping); ok {
		return x.Ping
	}
	return nil
}

type isC2SPacket_Packet interface {
	isC2SPacket_Packet()
}

type C2SPacket_UpdateLocation struct {
	UpdateLocation *C2SUpdateLocationPacket `protobuf:"bytes,1,opt,name=updateLocation,proto3,oneof"`
}

type C2SPacket_UpdatePerk struct {
	UpdatePerk *C2SPerkUpdatePacket `protobuf:"bytes,2,opt,name=updatePerk,proto3,oneof"`
}

type C2SPacket_Disconnect struct {
	Disconnect *C2SDisconnectPacket `protobuf:"bytes,4,opt,name=disconnect,proto3,oneof"`
}

type C2SPacket_Ping struct {
	Ping *C2SPingPacket `protobuf:"bytes,5,opt,name=ping,proto3,oneof"`
}

func (*C2SPacket_UpdateLocation) isC2SPacket_Packet() {}

func (*C2SPacket_UpdatePerk) isC2SPacket_Packet() {}

func (*C2SPacket_Disconnect) isC2SPacket_Packet() {}

func (*C2SPacket_Ping) isC2SPacket_Packet() {}

type C2SPingPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *C2SPingPacket) Reset() {
	*x = C2SPingPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPingPacket) ProtoMessage() {}

func (x *C2SPingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPingPacket.ProtoReflect.Descriptor instead.
func (*C2SPingPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{4}
}

type C2SDisconnectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *C2SDisconnectPacket) Reset() {
	*x = C2SDisconnectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SDisconnectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SDisconnectPacket) ProtoMessage() {}

func (x *C2SDisconnectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SDisconnectPacket.ProtoReflect.Descriptor instead.
func (*C2SDisconnectPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{5}
}

func (x *C2SDisconnectPacket) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type C2SUpdateLocationPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin      string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	PreLobby    bool   `protobuf:"varint,3,opt,name=preLobby,proto3" json:"preLobby,omitempty"`
}

func (x *C2SUpdateLocationPacket) Reset() {
	*x = C2SUpdateLocationPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUpdateLocationPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUpdateLocationPacket) ProtoMessage() {}

func (x *C2SUpdateLocationPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUpdateLocationPacket.ProtoReflect.Descriptor instead.
func (*C2SUpdateLocationPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{6}
}

func (x *C2SUpdateLocationPacket) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *C2SUpdateLocationPacket) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *C2SUpdateLocationPacket) GetPreLobby() bool {
	if x != nil {
		return x.PreLobby
	}
	return false
}

type C2SPerkUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category PerkCategory `protobuf:"varint,1,opt,name=category,proto3,enum=art.ameliah.laby.addons.cubepanion.PerkCategory" json:"category,omitempty"`
	Perks    []string     `protobuf:"bytes,2,rep,name=perks,proto3" json:"perks,omitempty"`
}

func (x *C2SPerkUpdatePacket) Reset() {
	*x = C2SPerkUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPerkUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPerkUpdatePacket) ProtoMessage() {}

func (x *C2SPerkUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPerkUpdatePacket.ProtoReflect.Descriptor instead.
func (*C2SPerkUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{7}
}

func (x *C2SPerkUpdatePacket) GetCategory() PerkCategory {
	if x != nil {
		return x.Category
	}
	return PerkCategory_PERSONAL
}

func (x *C2SPerkUpdatePacket) GetPerks() []string {
	if x != nil {
		return x.Perks
	}
	return nil
}

var File_packets_proto protoreflect.FileDescriptor

var file_packets_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62,
	0x79, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x09, 0x53, 0x32, 0x43, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x59, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c,
	0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2e,
	0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x50, 0x65,
	0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6b, 0x12, 0x47, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x72, 0x74,
	0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x32, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x0f, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0x8d, 0x01, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x50, 0x65, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x74,
	0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x65, 0x72, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0xfb, 0x02, 0x0a, 0x09, 0x43, 0x32, 0x53, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x65,
	0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65,
	0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73,
	0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x32, 0x53, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x72, 0x74, 0x2e,
	0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x32, 0x53, 0x50, 0x65, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6b,
	0x12, 0x59, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69,
	0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2e, 0x63,
	0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x32, 0x53, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x72, 0x74, 0x2e,
	0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x32, 0x53, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x0f,
	0x0a, 0x0d, 0x43, 0x32, 0x53, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x2d, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x6f,
	0x0a, 0x17, 0x43, 0x32, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x22,
	0x79, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x50, 0x65, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61,
	0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79, 0x2e, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x65,
	0x72, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x2a, 0x30, 0x0a, 0x0c, 0x50, 0x65,
	0x72, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x45,
	0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4d,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x42, 0x49, 0x0a, 0x2d,
	0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x79,
	0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x75, 0x62, 0x65, 0x70, 0x61, 0x6e, 0x69,
	0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x50, 0x01, 0x5a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packets_proto_rawDescOnce sync.Once
	file_packets_proto_rawDescData = file_packets_proto_rawDesc
)

func file_packets_proto_rawDescGZIP() []byte {
	file_packets_proto_rawDescOnce.Do(func() {
		file_packets_proto_rawDescData = protoimpl.X.CompressGZIP(file_packets_proto_rawDescData)
	})
	return file_packets_proto_rawDescData
}

var file_packets_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_packets_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_packets_proto_goTypes = []interface{}{
	(PerkCategory)(0),               // 0: art.ameliah.laby.addons.cubepanion.PerkCategory
	(*S2CPacket)(nil),               // 1: art.ameliah.laby.addons.cubepanion.S2CPacket
	(*S2CPingPacket)(nil),           // 2: art.ameliah.laby.addons.cubepanion.S2CPingPacket
	(*S2CPerkUpdatePacket)(nil),     // 3: art.ameliah.laby.addons.cubepanion.S2CPerkUpdatePacket
	(*C2SPacket)(nil),               // 4: art.ameliah.laby.addons.cubepanion.C2SPacket
	(*C2SPingPacket)(nil),           // 5: art.ameliah.laby.addons.cubepanion.C2SPingPacket
	(*C2SDisconnectPacket)(nil),     // 6: art.ameliah.laby.addons.cubepanion.C2SDisconnectPacket
	(*C2SUpdateLocationPacket)(nil), // 7: art.ameliah.laby.addons.cubepanion.C2SUpdateLocationPacket
	(*C2SPerkUpdatePacket)(nil),     // 8: art.ameliah.laby.addons.cubepanion.C2SPerkUpdatePacket
}
var file_packets_proto_depIdxs = []int32{
	3, // 0: art.ameliah.laby.addons.cubepanion.S2CPacket.updatePerk:type_name -> art.ameliah.laby.addons.cubepanion.S2CPerkUpdatePacket
	2, // 1: art.ameliah.laby.addons.cubepanion.S2CPacket.ping:type_name -> art.ameliah.laby.addons.cubepanion.S2CPingPacket
	0, // 2: art.ameliah.laby.addons.cubepanion.S2CPerkUpdatePacket.category:type_name -> art.ameliah.laby.addons.cubepanion.PerkCategory
	7, // 3: art.ameliah.laby.addons.cubepanion.C2SPacket.updateLocation:type_name -> art.ameliah.laby.addons.cubepanion.C2SUpdateLocationPacket
	8, // 4: art.ameliah.laby.addons.cubepanion.C2SPacket.updatePerk:type_name -> art.ameliah.laby.addons.cubepanion.C2SPerkUpdatePacket
	6, // 5: art.ameliah.laby.addons.cubepanion.C2SPacket.disconnect:type_name -> art.ameliah.laby.addons.cubepanion.C2SDisconnectPacket
	5, // 6: art.ameliah.laby.addons.cubepanion.C2SPacket.ping:type_name -> art.ameliah.laby.addons.cubepanion.C2SPingPacket
	0, // 7: art.ameliah.laby.addons.cubepanion.C2SPerkUpdatePacket.category:type_name -> art.ameliah.laby.addons.cubepanion.PerkCategory
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_packets_proto_init() }
func file_packets_proto_init() {
	if File_packets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPingPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPerkUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPingPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SDisconnectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SUpdateLocationPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPerkUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packets_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*S2CPacket_UpdatePerk)(nil),
		(*S2CPacket_Ping)(nil),
	}
	file_packets_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*C2SPacket_UpdateLocation)(nil),
		(*C2SPacket_UpdatePerk)(nil),
		(*C2SPacket_Disconnect)(nil),
		(*C2SPacket_Ping)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packets_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packets_proto_goTypes,
		DependencyIndexes: file_packets_proto_depIdxs,
		EnumInfos:         file_packets_proto_enumTypes,
		MessageInfos:      file_packets_proto_msgTypes,
	}.Build()
	File_packets_proto = out.File
	file_packets_proto_rawDesc = nil
	file_packets_proto_goTypes = nil
	file_packets_proto_depIdxs = nil
}
