{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Cubepanion API documentation Relevant GitHub repositories for the project are the api , and the Laby addon . The project aims to make the addon more dynamic and less dependent on updates to the addon itself. With the extra benefit of being able to use the API for other projects. Services chests - Provides information about the Lobby Chest Hunter locations games - Provides information about the avaible games leaderboards - Provides information about game, and player leaderboards maps - Provides information about EggWars maps stats - Provides information about player counts Project layout & deployment Each service is deployed as a seperate docker container, and served behind a nginx reverse proxy. There is a redis cache layer present, so you may so delayed updates to the API.","title":"Home"},{"location":"#welcome-to-the-cubepanion-api-documentation","text":"Relevant GitHub repositories for the project are the api , and the Laby addon . The project aims to make the addon more dynamic and less dependent on updates to the addon itself. With the extra benefit of being able to use the API for other projects.","title":"Welcome to the Cubepanion API documentation"},{"location":"#services","text":"chests - Provides information about the Lobby Chest Hunter locations games - Provides information about the avaible games leaderboards - Provides information about game, and player leaderboards maps - Provides information about EggWars maps stats - Provides information about player counts","title":"Services"},{"location":"#project-layout-deployment","text":"Each service is deployed as a seperate docker container, and served behind a nginx reverse proxy. There is a redis cache layer present, so you may so delayed updates to the API.","title":"Project layout &amp; deployment"},{"location":"chests/","text":"Chests Service Provides locations of the Lobby Chest Hunter locations. And seasons, these seasons are not official and only used for internal seperation. This service is served under /cubepanion/chests Endpoints GET / Returns an array of ChestLocation s for the seasons currently active. GET /:season Returns an array of ChestLocation s for the specified season. GET /seasons/:active Returns an array of (active) Seaon s. Models ChestLocation { \"seasons_name\": \"\", \"x\": 0, \"y\": 0, \"z\": 0 } Season Simple string, representing the season name.","title":"Chest Service"},{"location":"chests/#chests-service","text":"Provides locations of the Lobby Chest Hunter locations. And seasons, these seasons are not official and only used for internal seperation. This service is served under /cubepanion/chests","title":"Chests Service"},{"location":"chests/#endpoints","text":"","title":"Endpoints"},{"location":"chests/#get","text":"Returns an array of ChestLocation s for the seasons currently active.","title":"GET /"},{"location":"chests/#get-season","text":"Returns an array of ChestLocation s for the specified season.","title":"GET /:season"},{"location":"chests/#get-seasonsactive","text":"Returns an array of (active) Seaon s.","title":"GET /seasons/:active"},{"location":"chests/#models","text":"","title":"Models"},{"location":"chests/#chestlocation","text":"{ \"seasons_name\": \"\", \"x\": 0, \"y\": 0, \"z\": 0 }","title":"ChestLocation"},{"location":"chests/#season","text":"Simple string, representing the season name.","title":"Season"},{"location":"games/","text":"Games Service Provides information about (active) games on the CubeCraft Games network. This service is served under /cubepanion/games Endpoints GET /:active Returns an array of (active) Game s. GET /game/:game Returns a Game object for the specified game. This may be the display, game, or any of the aliases. Models Game { \"game\": \"\", \"display_name\": \"\", \"aliases\": [\"\"], \"active\": true, \"score_type\": \"\" }","title":"Games Service"},{"location":"games/#games-service","text":"Provides information about (active) games on the CubeCraft Games network. This service is served under /cubepanion/games","title":"Games Service"},{"location":"games/#endpoints","text":"","title":"Endpoints"},{"location":"games/#get-active","text":"Returns an array of (active) Game s.","title":"GET /:active"},{"location":"games/#get-gamegame","text":"Returns a Game object for the specified game. This may be the display, game, or any of the aliases.","title":"GET /game/:game"},{"location":"games/#models","text":"","title":"Models"},{"location":"games/#game","text":"{ \"game\": \"\", \"display_name\": \"\", \"aliases\": [\"\"], \"active\": true, \"score_type\": \"\" }","title":"Game"},{"location":"leaderboard/","text":"Leaderboard service Provides information about leaderboards on the CubeCraft Games network. Data is read by the Laby addon . This service is served under /cubepanion/leaderboard Endpoints GET /player/:name Returns an array LeaderboardRow s for the specified player. Each row in game. GET /game/:game Returns an array LeaderboardRow s for the specified game. The array will be 200 long. GET /game/:game/bounded Returns an array LeaderboardRow s for the specified game. You must provide a lower and upper query parameter, the array will be as long as their difference. The endpoint above is generally faster by ~15%, just use whatever is easier for your use case. GET /batch Body must be BatchRequest Returns an array of LeaderboardRow s for the passed players, in a specific game. Not guaranteed to be ordered in any specific way GET /players Returns an array of strings, containing all names of the players on the latest leaderboards Models LeaderboardRow { \"game\": \"\", \"player\": \"\", \"position\": 0, \"score\": 0, \"unix_time_stamp\": 0 } The score type should be loaded from the games-service. Load these once, on application startup and then periodically if needed. Don't make a new request each time. They hardly update. BatchRequest { \"game\": \"\", \"players\": [\"\"] }","title":"Leaderboard Service"},{"location":"leaderboard/#leaderboard-service","text":"Provides information about leaderboards on the CubeCraft Games network. Data is read by the Laby addon . This service is served under /cubepanion/leaderboard","title":"Leaderboard service"},{"location":"leaderboard/#endpoints","text":"","title":"Endpoints"},{"location":"leaderboard/#get-playername","text":"Returns an array LeaderboardRow s for the specified player. Each row in game.","title":"GET /player/:name"},{"location":"leaderboard/#get-gamegame","text":"Returns an array LeaderboardRow s for the specified game. The array will be 200 long.","title":"GET /game/:game"},{"location":"leaderboard/#get-gamegamebounded","text":"Returns an array LeaderboardRow s for the specified game. You must provide a lower and upper query parameter, the array will be as long as their difference. The endpoint above is generally faster by ~15%, just use whatever is easier for your use case.","title":"GET /game/:game/bounded"},{"location":"leaderboard/#get-batch","text":"Body must be BatchRequest Returns an array of LeaderboardRow s for the passed players, in a specific game. Not guaranteed to be ordered in any specific way","title":"GET /batch"},{"location":"leaderboard/#get-players","text":"Returns an array of strings, containing all names of the players on the latest leaderboards","title":"GET /players"},{"location":"leaderboard/#models","text":"","title":"Models"},{"location":"leaderboard/#leaderboardrow","text":"{ \"game\": \"\", \"player\": \"\", \"position\": 0, \"score\": 0, \"unix_time_stamp\": 0 } The score type should be loaded from the games-service. Load these once, on application startup and then periodically if needed. Don't make a new request each time. They hardly update.","title":"LeaderboardRow"},{"location":"leaderboard/#batchrequest","text":"{ \"game\": \"\", \"players\": [\"\"] }","title":"BatchRequest"},{"location":"maps/","text":"Maps Service Provides information about EggWars maps on the CubeCraft Games network. This service is served under /cubepanion/maps Endpoints GET / Returns an array of Map s. GET /:mapName Returns a Map object for the specified map. Models Map { \"unique_name\": \"\", \"map_name\": \"\", \"team_size\": 0, \"layout\": \"\", //double_cross, cross, triple_cross, or square \"colours\": \"\", \"build_limit\": 0, \"generators\": [`Generator`] } Converting the map colours may be a bit tricky, it's a stringed array. Addon code Generator { \"unique_name\": \"\", // The map name \"ordering\": 0, \"gen_type\": \"\", // diamond, gold, or iron \"gen_location\": \"\", // middle, semimiddle, or base \"level\": 0, \"count\": 0 }","title":"Maps Service"},{"location":"maps/#maps-service","text":"Provides information about EggWars maps on the CubeCraft Games network. This service is served under /cubepanion/maps","title":"Maps Service"},{"location":"maps/#endpoints","text":"","title":"Endpoints"},{"location":"maps/#get","text":"Returns an array of Map s.","title":"GET /"},{"location":"maps/#get-mapname","text":"Returns a Map object for the specified map.","title":"GET /:mapName"},{"location":"maps/#models","text":"","title":"Models"},{"location":"maps/#map","text":"{ \"unique_name\": \"\", \"map_name\": \"\", \"team_size\": 0, \"layout\": \"\", //double_cross, cross, triple_cross, or square \"colours\": \"\", \"build_limit\": 0, \"generators\": [`Generator`] } Converting the map colours may be a bit tricky, it's a stringed array. Addon code","title":"Map"},{"location":"maps/#generator","text":"{ \"unique_name\": \"\", // The map name \"ordering\": 0, \"gen_type\": \"\", // diamond, gold, or iron \"gen_location\": \"\", // middle, semimiddle, or base \"level\": 0, \"count\": 0 }","title":"Generator"},{"location":"stats/","text":"Stats service Provides information about the player count of CubeCraft, and games currently in the lobby. Data is read by the Laby addon . This service is served under /cubepanion/stats Endpoints GET /game/:game Returns the latest GameStat object related to the pasted game. GET /games Returns an array of the latest GameStat objects for each game. Models GameStat { \"game\": \"\", \"player_count\": 0, \"unix_time_stamp\": 0 } Notes The GameStat with game equal to Main Lobby , does not represent the total amount of players in all lobbies, but rather all players on CubeCraft. It is read from the scoreboard. Other player counts are read from the game compass.","title":"Stats Service"},{"location":"stats/#stats-service","text":"Provides information about the player count of CubeCraft, and games currently in the lobby. Data is read by the Laby addon . This service is served under /cubepanion/stats","title":"Stats service"},{"location":"stats/#endpoints","text":"","title":"Endpoints"},{"location":"stats/#get-gamegame","text":"Returns the latest GameStat object related to the pasted game.","title":"GET /game/:game"},{"location":"stats/#get-games","text":"Returns an array of the latest GameStat objects for each game.","title":"GET /games"},{"location":"stats/#models","text":"","title":"Models"},{"location":"stats/#gamestat","text":"{ \"game\": \"\", \"player_count\": 0, \"unix_time_stamp\": 0 }","title":"GameStat"},{"location":"stats/#notes","text":"The GameStat with game equal to Main Lobby , does not represent the total amount of players in all lobbies, but rather all players on CubeCraft. It is read from the scoreboard. Other player counts are read from the game compass.","title":"Notes"}]}